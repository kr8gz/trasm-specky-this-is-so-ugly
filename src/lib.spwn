#[cache_output]

extract import "constant.spwn"
import "token.spwn" 

#[desc("TrIGgER ASSembly")]
type @trasm

// @trasm extensions
import "lexer.spwn"
import "parser.spwn"
import "interpreter.spwn"
import "utils.spwn"

impl @trasm {
    from_str: (code: @string) {
        let trasm = @trasm::{
            lines: code.split("\n").map(line => line.replace(r"\r","")), // .map(line => line.r_trim())
            
            error: false,

            lexed: [],
            parsed: [],

            variables: {},
            constants: {},

            scopes: [],
            locals: {},
        }

        trasm.lexed = trasm.lex()
        trasm.parsed = trasm.parse()
        if trasm.error { return trasm }

        /*
         *  Self-entitled SPWN Expert — Today at 17:27
         *  I would
         *  trasm.push_error("dhrjejje")

         *  // when everything finished
         *  trasm.print_errors()
         *  hungty — Today at 17:27
         *  thats what i wanted to do too
         */

        trasm.run()
        return trasm
    },
    from_file: (name: @string) { // use @path when spwn v0.9 is released
        return @trasm::from_str($.readfile(name))
    },
}
